package hangman;

/**
 * The Array implementation of the GameModel interface.
 */
public class ArrayGameModel implements GameModel {
	/** The number of characters (lower/upper). */
	private static final int ALPHABET_COUNT = 26*2;
	
	/** hung state */
	private int state;
	private String guessWord = new String();
	private char[] guessArray = new char[ALPHABET_COUNT];
	/**
	 * Creates a new ArrayGameModel object.
	 * 
	 *  guessWord the word to guess
	 */
	public ArrayGameModel(String guessWord) {
		// TODO (1)
		this.guessWord = guessWord;
		state    = STARTING_STATE;
	}
		
	public boolean isPriorGuess(char guess) {
		// TODO (2)
		for (char c : this.guessArray) {
			if (c == guess) {
				return true;
			}
		this.guessArray.
		}
		return false;
	}
	
	public int numberOfGuesses() {
		// TODO (3)
		return 0;
	}
	
	public boolean isCorrectGuess(char guess) {
		// TODO (4)
		return false;
	}
	
	public boolean doMove(char guess) {
		// TODO (5)
		return false;
	}

	public boolean inWinningState() {
		// TODO (6)
		return false;
	}

	public boolean inLosingState() {
		// TODO(7)
		return false;
	}
	
	public String toString() {
		String s = "";
		
		// TODO (8)
		
		return s;
	}

	public String previousGuessString() {
		String s = "";
		 
		// TODO (9)
		
		return s;
	}
	
	public int getState() {
		return state;
	}

	public String getWord() {

		// TODO (10)

		return null;
	}
  
}
